# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url = jdbc:mysql://localhost:3306/flechave_database
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# Username and password
spring.datasource.username = root
spring.datasource.password = loop951

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql = true

logging.file = ${catalina.home}/logs/flechavendas.log
logging.level.root=ERROR
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=INFO
logging.level.br.com.rodrigodaweb.flechavendas=DEBUG

server.port = 8181

#Max MultipartFile Size
spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=10MB

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#Application properties
br.com.rodrigodaweb.flechavendas.cliente.documento.dir = /uploadFilesDev/
br.com.rodrigodaweb.flechavendas.industria.tabela.dir = /tabelasDir/